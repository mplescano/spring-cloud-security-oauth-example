<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.mplescano.poc</groupId>
    <artifactId>spring-cloud-security-oauth-example</artifactId>
    <version>1.0.0</version>
    <name>Parent POM</name>
    <packaging>pom</packaging>

    <modules>
        <module>spring-security-client</module>
        <module>spring-security-auth-server</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.1.4.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Greenwich.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.thymeleaf.extras</groupId>
                <artifactId>thymeleaf-extras-springsecurity4</artifactId>
                <version>3.0.4.RELEASE</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>2.0.4.RELEASE</version>
                    <executions>
                        <execution>
                            <id>build-info</id>
                            <!-- default phase -->
                            <phase>generate-resources</phase>
                            <!-- Spring Boot Actuator displays build-related 
                                information if a META-INF/build-info.properties file is present -->
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                            <configuration>
                                <additionalProperties>
                                    <encoding.source>${project.build.sourceEncoding}</encoding.source>
                                    <encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
                                    <java.source>${maven.compiler.source}</java.source>
                                    <java.target>${maven.compiler.target}</java.target>
                                </additionalProperties>
                            </configuration>
                        </execution>
                        <execution>
                            <id>repackage</id>
                            <!-- default phase -->
                            <phase>package</phase>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                            <configuration>
                                <fork>true</fork>
                                <classifier combine.self="override">war</classifier>
                                <executable combine.self="override">false</executable>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Spring Boot Actuator displays build-related information 
                    if a META-INF/build-info.properties file is present -->
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>2.2.4</version>
                    <executions>
                        <execution>
                            <!-- default phase -->
                            <phase>initialize</phase>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <verbose>true</verbose>
                        <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                        </generateGitPropertiesFilename>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>spring-boot</id>
            <activation>
                <property>
                    <name>spring-build</name>
                    <value>true</value>
                </property>
                <file>
                    <!-- Just a way to identify a Spring Boot application -->
                    <exists>src/main/resources/bootstrap.properties</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-build</id>
            <activation>
                <property>
                    <name>docker-build</name>
                    <value>true</value>
                </property>
                <file>
                    <!-- Just a way to identify a Spring Boot application -->
                    <exists>src/main/resources/bootstrap.properties</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>repackage</id>
                                <!-- default phase -->
                                <phase>package</phase>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                                <configuration>
                                    <classifier>war-exec</classifier>
                                    <executable>true</executable>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources-2</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <overwrite>true</overwrite>
                                    <outputDirectory>${project.build.directory}/docker-build/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${docker.image.dockerfile.dir}</directory>
                                        </resource>
                                        <resource>
                                            <directory>${project.build.directory}</directory>
                                            <include>*-war-exec.jar</include>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- hack in order to pass multiples ports in EXPOSE -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>replace-snip-text</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <replace token="${EXPOSED_PORT}"
                                            value="${docker.image.exposed.port}"
                                            dir="${project.build.directory}/docker-build/">
                                            <include name="Dockerfile" />
                                        </replace>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${docker.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>install-build</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <repository>${docker.image.prefix}/${project.artifactId}</repository>
                            <tag>${project.version}</tag>
                            <tag>latest</tag>
                            <contextDirectory>${project.build.directory}/docker-build/</contextDirectory>
                            <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                            <buildArgs>
                                <ARTIFACT_NAME>${project.build.finalName}-war-exec</ARTIFACT_NAME>
                                <EXPOSED_PORT>${docker.image.exposed.port}</EXPOSED_PORT>
                                <TYPE_APP>${docker.type.app}</TYPE_APP>
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
